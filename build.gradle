buildscript {
  ext {
    springVersion = '2.6.6'
    springCloudVersion = '2.2.6.RELEASE'
    springOauth2Version = '2.2.1.RELEASE'
    springJwtVersion = '1.0.9.RELEASE'
    swaggerVersion = '2.9.2'
    awsSdkVersion = '1.10.73'
    jacksonDataFormatVersion = '2.13.2'
    log4jVersion = '2.17.1'
  }
  repositories {
    mavenCentral()
    maven {
      url 'https://repo.spring.io/libs-release'
    }
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springVersion}"
  }
}

plugins {
  id 'org.springframework.boot' version '2.6.6'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "org.springframework.boot"
apply plugin: 'io.spring.dependency-management'
apply plugin: 'project-report'

compileJava {
  options.encoding = 'UTF-8'
  options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

bootJar {
  baseName = 'mybeautip-server'
  version = '1.1.1'
}

springBoot {
  buildInfo {
    properties {
      version = '1.0.0'
      name = 'myBeautip Server Application'
      group = 'com.jocoos.mybeautip'
    }
  }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

dependencies {
  implementation("org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1")
  compile "org.springframework.boot:spring-boot-starter-actuator:${springVersion}"
  compile "org.springframework.boot:spring-boot-starter-web:${springVersion}"
  compile "org.springframework.boot:spring-boot-starter-log4j2:${springVersion}"
  implementation("org.springframework.boot:spring-boot-starter-validation:${springVersion}")
  compile "org.apache.logging.log4j:log4j-api:${log4jVersion}"
  compile "org.apache.logging.log4j:log4j-core:${log4jVersion}"
  compile "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
  compile "org.springframework.boot:spring-boot-starter-data-rest:${springVersion}"
  compile "org.springframework.boot:spring-boot-starter-data-jpa:${springVersion}"
  compile "org.springframework.boot:spring-boot-starter-security:${springVersion}"
  compile "org.springframework.boot:spring-boot-starter-aop:${springVersion}"
  compile "org.springframework.boot:spring-boot-starter-mail:${springVersion}"
  compile "org.springframework.security.oauth:spring-security-oauth2:${springOauth2Version}"
  compile "org.springframework.security:spring-security-jwt:${springJwtVersion}"
  compile "org.springframework.boot:spring-boot-devtools:${springVersion}"
  compile "org.springframework.cloud:spring-cloud-aws-messaging:${springCloudVersion}"
  implementation("com.fasterxml.jackson.core:jackson-core:${jacksonDataFormatVersion}")
  compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonDataFormatVersion}"
  compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonDataFormatVersion}"
  implementation("org.mapstruct:mapstruct:1.4.2.Final")
  annotationProcessor "org.mapstruct:mapstruct:1.4.2.Final"
  annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'
//  annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
  compile "org.projectlombok:lombok:1.18.10"
  annotationProcessor "org.projectlombok:lombok:1.18.10"
  compile 'org.flywaydb:flyway-core:7.15.0'
  compile 'javax.xml.bind:jaxb-api'
//  compile "io.springfox:springfox-data-rest:${swaggerVersion}"
//  compile "io.springfox:springfox-swagger2:${swaggerVersion}"
//  compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
  compile 'org.apache.commons:commons-exec:1.3'
  compile 'org.apache.commons:commons-lang3:3.7'
  compile 'org.apache.commons:commons-collections4:4.2'
  compile 'org.apache.httpcomponents:httpclient:4.5.5'
  compile 'org.json:json:20180813'
  compile 'mysql:mysql-connector-java'
  compile 'com.h2database:h2'
  compile 'com.amazonaws:aws-java-sdk-sts:1.11.375'
  compile 'org.jsoup:jsoup:1.11.2'
  compile 'redis.clients:jedis:2.9.0'
  compile 'io.jsonwebtoken:jjwt:0.9.0'

  testCompile group: 'org.springframework.security', name: 'spring-security-test', version: '5.0.0.RELEASE'
  testCompile ("org.springframework.boot:spring-boot-starter-test:${springVersion}") {
    exclude module: 'commons-logging'
  }
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.1.0'
  testImplementation 'org.mockito:mockito-all:1.10.19'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.1.0'
  testCompileOnly 'junit:junit:4.12'
  testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.1.0'

}

test {
  useJUnitPlatform()
}

configurations {
  compile.exclude module: 'spring-boot-starter-logging'
}

eclipse {
  classpath {
    containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
    containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
  }
}