type Vod {
    id: ID!
    url: String!
    isVisible: Boolean!
    thumbnailUrl: String
    title: String
    duration: Int
    viewCount: Int
    vodHeartCount: Int
    liveHeartCount: Int
    createdAt: String
    member: Member
    reports: [VodReport]
}

type VodReport {
    id: ID!
    reporter: Member
    description: String
    createdAt: String
}

type Member {
    id: ID!
    email: String
    username: String
    avatarUrl: String
}

type Query {
    vodList(paging: Paging, filter: Filter): [Vod]
    vodById(id: ID): Vod
}

type Mutation {
    editVod(vodInput: VodInput): Vod
}

input VodInput {
    id: ID!
    title: String
    isVisible: Boolean
    thumbnail: String
}

input Paging {
    page: Int = 1
    size: Int = 5
    sort: String
    order: SortOrder
}

input Filter {
    startAt: String
    endAt:String
    searchField: String
    searchKeyword: String
    isVisible: Boolean
    isReported: Boolean
}

enum SortOrder {
    ASC
    DESC
}
